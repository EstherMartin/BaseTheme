{
    "pipes": [],
    "interfaces": [
        {
            "name": "DropdownValueOptions",
            "id": "interface-DropdownValueOptions-3cdb068865a3974975092a7b5a8dcf401b2dce487e51f2fca58bc21a82c6fd8e0e8f9070bb6d82b0f4316da6bbb99c7c150d5786042698cc5ea6d05c48c4107d",
            "file": "src/stories/components/base-inputs/base-dropdown/base-dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nexport interface DropdownValueOptions {\r\n  value: number,\r\n  displayName: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'base-dropdown',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FontAwesomeModule, NgSelectModule],\r\n  templateUrl: './base-dropdown.component.html',\r\n  styleUrls: ['./base-dropdown.component.scss'],\r\n})\r\n\r\nexport class BaseDropdownComponent {\r\n  @Input() public size: 'small' | 'medium' | 'large' = 'large';\r\n  @Input() public label = 'Input';\r\n  @Input() public items: DropdownValueOptions[]=[];\r\n  @Input() public control!: FormControl;\r\n  @Input() public formValidator!: string[];\r\n  @Input() public errorMessage!: string;\r\n  @Input() public required = false;\r\n  @Input() public disabled = false;\r\n\r\n  public get classes(): string[] {\r\n    const sizeClass = `--${this.size}`;\r\n    return ['base-dropdown', `base-dropdown${sizeClass}`];\r\n  }\r\n\r\n  public get errorClasses(): string[] {\r\n    const sizeClass = `.--${this.size}`;\r\n    return ['error-message-input', `error-message-input${sizeClass}`];\r\n  }\r\n\r\n  public get isDisabled(): string {\r\n    return this.disabled ? 'disabled' : 'enabled';\r\n  }\r\n\r\n  public get isRequired(): string {\r\n    return this.required ? 'required' : '';\r\n  }\r\n\r\n  public get hasErrorMessage(): boolean {\r\n    return !!this.errorMessage;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-23c11020a2831beb3fa02ee911a75b64009c31bb46f73a01145c2560cb13b7f7e641105b678bd8fb01a5a199117001f3da4a78351d29d85d213ed7b82982091f",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-5e116a305bfd6ba441681268d4c16af6517119c0031eb73c42ff879f0c0193297baaccac0501af06f6355ca25127b94c1290c3dd8d7e454309dce3cf92a7b1c7",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dropdownItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownValueOptions[]",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "myForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "selectedItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getEnableCheckbox",
                    "args": [],
                    "optional": false,
                    "returnType": "UntypedFormControl",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getEnableDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "UntypedFormControl",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getEnableInput",
                    "args": [],
                    "optional": false,
                    "returnType": "UntypedFormControl",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onCheckboxChecked",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "BaseInputComponent",
                    "type": "component"
                },
                {
                    "name": "BaseCheckboxComponent",
                    "type": "component"
                },
                {
                    "name": "BaseDropdownComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BaseInputComponent } from '../stories/components/base-inputs/base-input/base-input.component';\r\nimport { BaseCheckboxComponent } from '../stories/components/base-inputs/base-checkbox/base-checkbox.component';\r\nimport { BaseDropdownComponent, DropdownValueOptions } from \"../stories/components/base-inputs/base-dropdown/base-dropdown.component\";\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    standalone: true,\r\n    templateUrl: './app.component.html',\r\n    styleUrl: './app.component.scss',\r\n    imports: [\r\n      RouterOutlet, \r\n      FormsModule, \r\n      ReactiveFormsModule, \r\n      BaseInputComponent, \r\n      BaseCheckboxComponent, \r\n      BaseDropdownComponent,\r\n    ]\r\n})\r\nexport class AppComponent {\r\n  public myForm: FormGroup;\r\n  public selectedItems: string[] = [];\r\n  public dropdownItems!: DropdownValueOptions[];\r\n\r\n  constructor() {\r\n    this.myForm = new FormGroup({\r\n      enableInput: new UntypedFormControl(),\r\n      enableCheckbox: new UntypedFormControl(),\r\n      enableDropdown: new UntypedFormControl(),\r\n    });\r\n\r\n    this.dropdownItems = [\r\n      {\r\n        displayName: 'item 1',\r\n        value: 1,\r\n      },\r\n      {\r\n        displayName: 'item 2',\r\n        value: 2,\r\n      },\r\n      {\r\n        displayName: 'item 3',\r\n        value: 3,\r\n      },\r\n    ]\r\n  }\r\n\r\n  public getEnableInput(): UntypedFormControl {\r\n    console.log('Valor del input:', this.myForm.get('enableInput')?.value);\r\n    return this.myForm.get('enableInput') as FormControl;\r\n  }\r\n\r\n  public getEnableCheckbox(): UntypedFormControl {\r\n    return this.myForm.get('enableCheckbox') as FormControl;\r\n  }\r\n\r\n  public onCheckboxChecked(item: string) {\r\n    const index = this.selectedItems.indexOf(item);\r\n    if (index === -1) {\r\n      this.selectedItems.push(item);\r\n    } else {\r\n      this.selectedItems.splice(index, 1);\r\n    }\r\n    console.log('Items seleccionados:', this.selectedItems);\r\n  }\r\n\r\n  public getEnableDropdown(): UntypedFormControl {\r\n    console.log('Valor del dropdown:', this.myForm.get('enableDropdown')?.value);\r\n    return this.myForm.get('enableDropdown') as FormControl;\r\n  }\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "extends": [],
            "templateData": "<form [formGroup]=\"myForm\">\r\n  <base-input\r\n    [label]=\"'Input en prueba'\"\r\n    [placeholder]=\"'Pruebas del input'\"\r\n    [control]=\"getEnableInput()\"\r\n    [size]=\"'small'\"\r\n    [errorMessage]=\"''\"\r\n    [required]=\"true\"\r\n  ></base-input>\r\n\r\n    <base-checkbox\r\n      [size]=\"'small'\"\r\n      [position]=\"'column'\"\r\n      [label]=\"'Checkbox en prueba'\"\r\n      [disabled]=\"false\"\r\n      [items]=\"['item1', 'item2', 'item3']\"\r\n      [required]=\"false\"\r\n      [control]=\"getEnableCheckbox()\"\r\n      [errorMessage]=\"'Este campo es requerido.'\"\r\n      (checked)=\"onCheckboxChecked($event)\"\r\n  ></base-checkbox>\r\n\r\n  <base-dropdown\r\n      [size]=\"'small'\"\r\n      [label]=\"'Dropdown en prueba'\"\r\n      [disabled]=\"false\"\r\n      [items]=\"dropdownItems\"\r\n      [required]=\"false\"\r\n      [control]=\"getEnableDropdown()\"\r\n      [errorMessage]=\"'Este campo es requerido.'\"\r\n  ></base-dropdown>\r\n</form>"
        },
        {
            "name": "BaseAlertsComponent",
            "id": "component-BaseAlertsComponent-1ad2dde16600fc7347a3feb87f07d1424284d4faf4ab76dd1c52e2f2cb2c87f7ab954cf8533c850474a8a8756024ce54248176a713290915c33ba0d25ee38211",
            "file": "src/stories/components/base-alerts/base-alerts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "base-alerts",
            "styleUrls": [
                "./base-alerts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base-alerts.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "'Mensaje'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Titulo alerta'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'sucess'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"info\" | \"alert\" | \"error\" | \"sucess\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'base-alerts',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './base-alerts.component.html',\r\n  styleUrls: ['./base-alerts.component.scss'],\r\n})\r\nexport class BaseAlertsComponent {\r\n  @Input() type: 'info' | 'alert' | 'error' | 'sucess' = 'sucess';\r\n  @Input() disable = false;\r\n  @Input() title = 'Titulo alerta'\r\n  @Input() message = 'Mensaje';\r\n  @Output() onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.disable ? '--disable' : '--enable';\r\n    return ['base-alert', `base-alert--}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '/src/scss/variables/variables.scss';\r\n\r\n.base-alert {\r\n  border-radius: 15px;\r\n  font-size: $font-size-custom;\r\n  font-weight: $font-weight-custom;\r\n  margin: 20px;\r\n  max-width: fit-content;\r\n  min-width: 150px;\r\n  padding: 15px;\r\n  border: none;\r\n  color: $white-color;\r\n}",
                    "styleUrl": "./base-alerts.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 18
                    }
                }
            },
            "templateData": "<div class=\"alert alert-success\" role=\"alert\">\r\n    <i class=\"fa fa-asterisk\"></i>\r\n    <p> Titulo </p>\r\n    <p> Mensaje </p>\r\n</div>\r\n<div class=\"alert alert-info\" role=\"alert\">...</div>\r\n<div class=\"alert alert-warning\" role=\"alert\">...</div>\r\n<div class=\"alert alert-danger\" role=\"alert\">...</div>"
        },
        {
            "name": "BaseButtonComponent",
            "id": "component-BaseButtonComponent-74561785134787d0806f36fc59d5df718fabafd65379e949479992d470c5ca23e06e6355fb3a67b28e0c021db004241943ec47a6145a409c87ae0a3f9f2c975c",
            "file": "src/stories/components/base-button/base-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "base-button",
            "styleUrls": [
                "./base-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"submit\" | \"button\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'base-button',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './base-button.component.html',\r\n  styleUrls: ['./base-button.component.scss'],\r\n})\r\nexport class BaseButtonComponent {\r\n  @Input() type: 'submit' | 'button' = 'button';\r\n  @Input() disable = false;\r\n  @Input() label = 'Button';\r\n  @Output() onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.disable ? '--disable' : '--enable';\r\n    return ['base-button', `base-button--}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '/src/scss/variables/variables.scss';\r\n\r\n.base-button {\r\n  border-radius: 15px;\r\n  font-size: $font-size-custom;\r\n  font-weight: $font-weight-custom;\r\n  margin: 20px;\r\n  max-width: fit-content;\r\n  min-width: 150px;\r\n  padding: 15px;\r\n  border: none;\r\n  color: $white-color;\r\n\r\n  &.--enable {\r\n    background-color: $primary-color;\r\n    cursor: pointer;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 2px 2px $darkgrey-color;\r\n\r\n    &:hover {\r\n      background-color: $secondary-color;\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 5px 5px $darkgrey-color;\r\n    }\r\n  \r\n    &:active {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 2px 2px $darkgrey-color;\r\n    }\r\n  }\r\n\r\n  &.--disable {\r\n    pointer-events: none;\r\n    background-color: $darkgrey-color;  \r\n    cursor: none;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 2px 2px $darkgrey-color;\r\n  }\r\n}",
                    "styleUrl": "./base-button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 17
                    }
                }
            },
            "templateData": "<button\r\n    type=\"{{type}}\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\">\r\n    {{ label }}\r\n</button>"
        },
        {
            "name": "BaseCheckboxComponent",
            "id": "component-BaseCheckboxComponent-a288c5df4485853cf051f50bcd4fb6f31f518422e9426a25eedc64426db9feb73249e80442165bcfc47ef0a2ae20df79d2ec862863ec97aa2a8178336e789c52",
            "file": "src/stories/components/base-inputs/base-checkbox/base-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "base-checkbox",
            "styleUrls": [
                "./base-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base-checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "FormControl",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formValidator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'checkBox Input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"row\" | \"column\"",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n  selector: 'base-checkbox',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FontAwesomeModule],\r\n  templateUrl: './base-checkbox.component.html',\r\n  styleUrls: ['./base-checkbox.component.scss'],\r\n})\r\n\r\nexport class BaseCheckboxComponent {\r\n  @Input() public size: 'small' | 'medium' | 'large' = 'large';\r\n  @Input() public position: 'row' | 'column' = 'column';\r\n  @Input() public label= 'checkBox Input';\r\n  @Input() public disabled = false;\r\n  @Input() public items: string[]=[];\r\n  @Input() public required = false;\r\n  @Input() public control!: FormControl;\r\n  @Input() public formValidator!: string[];\r\n  @Input() public errorMessage!: string;\r\n\r\n  @Output() checked = new EventEmitter<string>();\r\n\r\n  public onChange(item: string, event: Event) {\r\n    let isChecked = event.target?.dispatchEvent\r\n    if (isChecked) {\r\n      this.checked.emit(item);\r\n    }\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    const sizeClass = `--${this.size}`;\r\n    return ['base-checkbox', `base-checkbox${sizeClass}`];\r\n  }\r\n\r\n  public get checkboxBodyClasses(): string[] {\r\n    const positionClass = `--${this.position}`;\r\n    return ['base-body-checkbox', `base-body-checkbox${positionClass}`];\r\n  }\r\n\r\n  public get errorClasses(): string[] {\r\n    const sizeClass = `.--${this.size}`;\r\n    return ['error-message-checkbox', `error-message-checkbox${sizeClass}`];\r\n  }\r\n\r\n  public get isDisabled(): string {\r\n    return this.disabled ? 'disabled' : 'enabled';\r\n  }\r\n\r\n  public get isRequired(): string {\r\n    return this.required ? 'required' : '';\r\n  }\r\n\r\n  public get hasErrorMessage(): boolean {\r\n    return !!this.errorMessage;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../scss/variables/variables.scss';\r\n\r\n.base-checkbox {\r\n  padding: 15px;\r\n  \r\n  &--small {\r\n    max-width: 25%;\r\n  }\r\n\r\n  &--medium {\r\n    max-width: 50%;\r\n  }\r\n\r\n  &--large {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .base-label-checkbox {\r\n    label {\r\n      color: $black-color;\r\n      font-size: $font-size-custom;\r\n      font-weight: $font-weight-custom;\r\n      padding: 10px 0;\r\n      margin-right: 10px;\r\n    }\r\n\r\n    i {\r\n      color: $danger-color;\r\n    }\r\n  }\r\n\r\n  .base-body-checkbox {\r\n    align-items: baseline;\r\n    display: flex;\r\n    width: 100%;\r\n\r\n    &--row {\r\n      flex-direction: row;\r\n      justify-content: space-around;\r\n    }\r\n\r\n    &--column {\r\n      flex-direction: column;\r\n    }\r\n\r\n    label {\r\n      color: $black-color;\r\n      font-size: $font-size-custom;\r\n      font-weight: $font-weight-custom;\r\n      padding: 10px;\r\n      margin-right: 10px;\r\n    }\r\n\r\n    .checkbox-items {\r\n      display: flex;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n\r\n      input[type=\"checkbox\"] {\r\n        border-radius: 5px;\r\n        font-size: $font-size-custom;\r\n        padding: 10px;\r\n        text-align: end;\r\n\r\n        &.disabled {\r\n          -webkit-appearance: none;\r\n          -moz-appearance: none;\r\n          appearance: none;\r\n          width: 10px;\r\n          height: 10px;\r\n          border: 2px solid $darkgrey-color;\r\n          pointer-events: none;\r\n          cursor: not-allowed;\r\n          background-color: $mediumgrey-color;\r\n          box-shadow: none;\r\n          color: $black-color;\r\n\r\n          &:checked {\r\n            outline: none;\r\n            border-color: $mediumgrey-color;\r\n            background-color: $darkgrey-color;\r\n            transition: border-color 0.3s ease;\r\n            box-shadow: 0 5px 5px $darkgrey-color;\r\n            color: $darkgrey-color;\r\n\r\n            &:after {\r\n              content: \"\";\r\n              display: block;\r\n              width: 8px;\r\n              height: 15px;\r\n              border: solid $mediumgrey-color;\r\n              border-width: 0 2px 2px 0;\r\n              transform: rotate(45deg);\r\n              position: relative;\r\n              top: -10px;\r\n              left: -3px;\r\n            }\r\n          }\r\n        }\r\n\r\n        &.enabled {\r\n          -webkit-appearance: none;\r\n          -moz-appearance: none;\r\n          appearance: none;\r\n          width: 10px;\r\n          height: 10px;\r\n          cursor: pointer;\r\n          border: 2px solid $primary-color;\r\n\r\n          &:checked {\r\n            outline: none;\r\n            border-color: $secondary-color;\r\n            background-color: $primary-color;\r\n            transition: border-color 0.3s ease;\r\n            box-shadow: 0 5px 5px $primary-color;\r\n            color: $primary-color;\r\n\r\n            &:after {\r\n              content: \"\";\r\n              display: block;\r\n              width: 8px;\r\n              height: 15px;\r\n              border: solid $secondary-color;\r\n              border-width: 0 2px 2px 0;\r\n              transform: rotate(45deg);\r\n              position: relative;\r\n              top: -10px;\r\n              left: -3px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .error-message-checkbox {\r\n    border: 2px solid $danger-color;\r\n    border-radius: 5px;\r\n    margin: 10px 0 0;\r\n    padding: 10px;\r\n    background-color: #FFCCCC;\r\n\r\n    &--small {\r\n      max-width: 25%;\r\n    }\r\n\r\n    &--medium {\r\n      max-width: 50%;\r\n    }\r\n\r\n    &--large {\r\n      max-width: 100%;\r\n    }\r\n\r\n    label {\r\n      color: $danger-color;\r\n      font-size: $font-size-small;\r\n      font-weight: $font-weight-custom;\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./base-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 34
                    }
                },
                "checkboxBodyClasses": {
                    "name": "checkboxBodyClasses",
                    "getSignature": {
                        "name": "checkboxBodyClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 39
                    }
                },
                "errorClasses": {
                    "name": "errorClasses",
                    "getSignature": {
                        "name": "errorClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 44
                    }
                },
                "isDisabled": {
                    "name": "isDisabled",
                    "getSignature": {
                        "name": "isDisabled",
                        "type": "string",
                        "returnType": "string",
                        "line": 49
                    }
                },
                "isRequired": {
                    "name": "isRequired",
                    "getSignature": {
                        "name": "isRequired",
                        "type": "string",
                        "returnType": "string",
                        "line": 53
                    }
                },
                "hasErrorMessage": {
                    "name": "hasErrorMessage",
                    "getSignature": {
                        "name": "hasErrorMessage",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 57
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\">\r\n  <div class=\"base-label-checkbox\">\r\n    <label [for]=\"control\"> {{label}} </label>\r\n    <i *ngIf=\"required\" class=\"fa fa-asterisk\"></i>\r\n  </div>\r\n  <div [ngClass]=\"checkboxBodyClasses\">\r\n    <div class=\"checkbox-items\" *ngFor=\"let item of items\">\r\n      <input [ngClass]=\"isDisabled\" type=\"checkbox\" (change)=\"onChange(item, $event)\">\r\n      <label for=\"item\"> {{ item }} </label>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"hasErrorMessage\" [ngClass]=\"errorClasses\">\r\n    <label [for]=\"control\"> {{errorMessage}} </label>\r\n  </div>\r\n</div>"
        },
        {
            "name": "BaseDropdownComponent",
            "id": "component-BaseDropdownComponent-3cdb068865a3974975092a7b5a8dcf401b2dce487e51f2fca58bc21a82c6fd8e0e8f9070bb6d82b0f4316da6bbb99c7c150d5786042698cc5ea6d05c48c4107d",
            "file": "src/stories/components/base-inputs/base-dropdown/base-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "base-dropdown",
            "styleUrls": [
                "./base-dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base-dropdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "FormControl",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formValidator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "DropdownValueOptions[]",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "NgSelectModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nexport interface DropdownValueOptions {\r\n  value: number,\r\n  displayName: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'base-dropdown',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FontAwesomeModule, NgSelectModule],\r\n  templateUrl: './base-dropdown.component.html',\r\n  styleUrls: ['./base-dropdown.component.scss'],\r\n})\r\n\r\nexport class BaseDropdownComponent {\r\n  @Input() public size: 'small' | 'medium' | 'large' = 'large';\r\n  @Input() public label = 'Input';\r\n  @Input() public items: DropdownValueOptions[]=[];\r\n  @Input() public control!: FormControl;\r\n  @Input() public formValidator!: string[];\r\n  @Input() public errorMessage!: string;\r\n  @Input() public required = false;\r\n  @Input() public disabled = false;\r\n\r\n  public get classes(): string[] {\r\n    const sizeClass = `--${this.size}`;\r\n    return ['base-dropdown', `base-dropdown${sizeClass}`];\r\n  }\r\n\r\n  public get errorClasses(): string[] {\r\n    const sizeClass = `.--${this.size}`;\r\n    return ['error-message-input', `error-message-input${sizeClass}`];\r\n  }\r\n\r\n  public get isDisabled(): string {\r\n    return this.disabled ? 'disabled' : 'enabled';\r\n  }\r\n\r\n  public get isRequired(): string {\r\n    return this.required ? 'required' : '';\r\n  }\r\n\r\n  public get hasErrorMessage(): boolean {\r\n    return !!this.errorMessage;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../scss/variables/variables.scss';\r\n\r\n.base-dropdown {\r\n  border-radius: 15px;\r\n  border: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n\r\n  &--small {\r\n    max-width: 25%;\r\n  }\r\n\r\n  &--medium {\r\n    max-width: 50%;\r\n  }\r\n\r\n  &--large {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .base-label-dropdown {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    label {\r\n      color: $black-color;\r\n      font-size: $font-size-custom;\r\n      font-weight: $font-weight-custom;\r\n      padding: 10px 0;\r\n      margin-right: 10px ;\r\n    }\r\n\r\n    i {\r\n      color: $danger-color;\r\n    }\r\n  }\r\n\r\n  select {\r\n    border-radius: 5px;\r\n    color: $black-color;\r\n    font-size: 16px;\r\n    padding: 10px;\r\n    width: 100%;\r\n    text-align: end;\r\n\r\n    option .options {\r\n      padding: 20px;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: red;\r\n    }\r\n    \r\n    &.disabled {\r\n      pointer-events: none;\r\n      cursor: not-allowed;\r\n      background-color: $mediumgrey-color;\r\n      border: 2px solid $darkgrey-color;\r\n      box-shadow: none;\r\n      color: $black-color;\r\n    }\r\n\r\n    &.enabled {\r\n      border: 2px solid $primary-color;\r\n      background-color: $white-color;\r\n      cursor: pointer;\r\n\r\n      &::placeholder {\r\n        color: $darkgrey-color;\r\n      }\r\n      \r\n      &.required {\r\n        background-color: red;\r\n      }\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: $secondary-color;\r\n        transition: border-color 0.3s ease;\r\n        box-shadow: 0 5px 5px $darkgrey-color;\r\n      }\r\n    }\r\n  }\r\n\r\n  .error-message-input {\r\n    border: 2px solid $danger-color;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    background-color: #FFCCCC;\r\n\r\n    &--small {\r\n      max-width: 25%;\r\n    }\r\n  \r\n    &--medium {\r\n      max-width: 50%;\r\n    }\r\n  \r\n    &--large {\r\n      max-width: 100%;\r\n    }\r\n  \r\n    label {\r\n      color: $danger-color;\r\n      font-size: $font-size-small;\r\n      font-weight: $font-weight-custom;\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./base-dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 30
                    }
                },
                "errorClasses": {
                    "name": "errorClasses",
                    "getSignature": {
                        "name": "errorClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 35
                    }
                },
                "isDisabled": {
                    "name": "isDisabled",
                    "getSignature": {
                        "name": "isDisabled",
                        "type": "string",
                        "returnType": "string",
                        "line": 40
                    }
                },
                "isRequired": {
                    "name": "isRequired",
                    "getSignature": {
                        "name": "isRequired",
                        "type": "string",
                        "returnType": "string",
                        "line": 44
                    }
                },
                "hasErrorMessage": {
                    "name": "hasErrorMessage",
                    "getSignature": {
                        "name": "hasErrorMessage",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 48
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\">\r\n  <div class=\"base-label-dropdown\">\r\n    <label [for]=\"control\"> {{label}} </label>\r\n    <i *ngIf=\"required\" class=\"fa fa-asterisk\"></i>\r\n  </div>\r\n  <select [ngClass]=\"isDisabled\" [formControl]=\"control\" [required]=\"required\">\r\n    <option class=\"options\" *ngFor=\"let item of items\" [value]=\"item.value\">\r\n      <p>{{item.displayName}}</p>\r\n    </option>\r\n  </select>\r\n  <div *ngIf=\"hasErrorMessage\" [ngClass]=\"errorClasses\">\r\n    <label [for]=\"control\"> {{errorMessage}} </label>\r\n  </div>\r\n</div>"
        },
        {
            "name": "BaseInputComponent",
            "id": "component-BaseInputComponent-fc9fe33faaa70ceb68f5c4dc85df4651787233fccc66515278eb06af3590d8e621ab755beaae718d4d6a0b5309b7e8afeda01cbaa12996932ee1c43aacc85086",
            "file": "src/stories/components/base-inputs/base-input/base-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "base-input",
            "styleUrls": [
                "./base-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormControl",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formValidator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n  selector: 'base-input',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FontAwesomeModule],\r\n  templateUrl: './base-input.component.html',\r\n  styleUrls: ['./base-input.component.scss'],\r\n})\r\n\r\nexport class BaseInputComponent {\r\n  @Input() public size: 'small' | 'medium' | 'large' = 'large';\r\n  @Input() public type = 'text';\r\n  @Input() public label = 'Input';\r\n  @Input() public placeholder = '';\r\n  @Input() public control!: FormControl;\r\n  @Input() public formValidator!: string[];\r\n  @Input() public errorMessage!: string;\r\n  @Input() public required = false;\r\n  @Input() public disabled = false;\r\n\r\n  public get classes(): string[] {\r\n    const sizeClass = `--${this.size}`;\r\n    return ['base-input', `base-input${sizeClass}`];\r\n  }\r\n\r\n  public get errorClasses(): string[] {\r\n    const sizeClass = `.--${this.size}`;\r\n    return ['error-message-input', `error-message-input${sizeClass}`];\r\n  }\r\n\r\n  public get isDisabled(): string {\r\n    return this.disabled ? 'disabled' : 'enabled';\r\n  }\r\n\r\n  public get isRequired(): string {\r\n    return this.required ? 'required' : '';\r\n  }\r\n\r\n  public get hasErrorMessage(): boolean {\r\n    return !!this.errorMessage;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../scss/variables/variables.scss';\r\n\r\n.base-input {\r\n  border-radius: 15px;\r\n  border: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n\r\n  &--small {\r\n    max-width: 25%;\r\n  }\r\n\r\n  &--medium {\r\n    max-width: 50%;\r\n  }\r\n\r\n  &--large {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .base-label-input {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    label {\r\n      color: $black-color;\r\n      font-size: $font-size-custom;\r\n      font-weight: $font-weight-custom;\r\n      padding: 10px 0;\r\n      margin-right: 10px ;\r\n    }\r\n\r\n    i {\r\n      color: $danger-color;\r\n    }\r\n  }\r\n\r\n  input {\r\n    border-radius: 5px;\r\n    color: $black-color;\r\n    font-size: 16px;\r\n    padding: 8px;\r\n    width: 100%;\r\n    text-align: end;\r\n    \r\n    &.disabled {\r\n      pointer-events: none;\r\n      cursor: not-allowed;\r\n      background-color: $mediumgrey-color;\r\n      border: 2px solid $darkgrey-color;\r\n      box-shadow: none;\r\n      color: $black-color;\r\n\r\n      &::placeholder {\r\n        color: $white-color;\r\n      }\r\n    }\r\n\r\n    &.enabled {\r\n      border: 2px solid $primary-color;\r\n      background-color: $white-color;\r\n      cursor: pointer;\r\n\r\n      &::placeholder {\r\n        color: $darkgrey-color;\r\n      }\r\n      \r\n      &.required {\r\n        background-color: red;\r\n      }\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: $secondary-color;\r\n        transition: border-color 0.3s ease;\r\n        box-shadow: 0 5px 5px $darkgrey-color;\r\n      }\r\n    }\r\n  }\r\n\r\n  .error-message-input {\r\n    border: 2px solid $danger-color;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    background-color: #FFCCCC;\r\n\r\n    &--small {\r\n      max-width: 25%;\r\n    }\r\n  \r\n    &--medium {\r\n      max-width: 50%;\r\n    }\r\n  \r\n    &--large {\r\n      max-width: 100%;\r\n    }\r\n  \r\n    label {\r\n      color: $danger-color;\r\n      font-size: $font-size-small;\r\n      font-weight: $font-weight-custom;\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./base-input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 25
                    }
                },
                "errorClasses": {
                    "name": "errorClasses",
                    "getSignature": {
                        "name": "errorClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 30
                    }
                },
                "isDisabled": {
                    "name": "isDisabled",
                    "getSignature": {
                        "name": "isDisabled",
                        "type": "string",
                        "returnType": "string",
                        "line": 35
                    }
                },
                "isRequired": {
                    "name": "isRequired",
                    "getSignature": {
                        "name": "isRequired",
                        "type": "string",
                        "returnType": "string",
                        "line": 39
                    }
                },
                "hasErrorMessage": {
                    "name": "hasErrorMessage",
                    "getSignature": {
                        "name": "hasErrorMessage",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 43
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\">\r\n  <div class=\"base-label-input\">\r\n    <label [for]=\"control\"> {{label}} </label>\r\n    <i *ngIf=\"required\" class=\"fa fa-asterisk\"></i>\r\n  </div>\r\n  <input [ngClass]=\"isDisabled\" [type]=\"type\" [placeholder]=\"placeholder\" [formControl]=\"control\"\r\n    [required]=\"required\">\r\n  <div *ngIf=\"hasErrorMessage\" [ngClass]=\"errorClasses\">\r\n    <label [for]=\"control\"> {{errorMessage}} </label>\r\n  </div>\r\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-2a5f98b6f1c297cd369f8d710ceb55031aa1d9774a6c36404b3ede1a3e22717729be2421f4b8a95277c666be01c20a2d5f3b2981f0fe7c8b9a37d6b21787dab0",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <base-button\n            *ngIf=\"user\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></base-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <base-button\n            *ngIf=\"!user\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></base-button>\n          <base-button\n            *ngIf=\"!user\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></base-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BaseButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BaseButtonComponent } from './components/base-button/base-button.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  standalone: true,\r\n  imports: [CommonModule, BaseButtonComponent],\r\n  template: `<header>\r\n    <div class=\"storybook-header\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <base-button\r\n            *ngIf=\"user\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></base-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <base-button\r\n            *ngIf=\"!user\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></base-button>\r\n          <base-button\r\n            *ngIf=\"!user\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></base-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.storybook-header svg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header h1 {\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header button + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.storybook-header .welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-b4e8b7aac6544b1a26c695ba4aeb86b4124e5a82bc42bd05c934cf442465c649073069cc9740e1f7507a5eb503e6c34e1e12bd602f120ff853cafabd3502ad4e",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n    selector: 'storybook-page',\r\n    standalone: true,\r\n    template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section class=\"storybook-page\">\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n    styleUrls: ['./page.css'],\r\n    imports: [CommonModule, HeaderComponent]\r\n})\r\nexport class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\n.storybook-page h2 {\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page p {\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\n.storybook-page ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.storybook-page .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideRouter(routes)]\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideRouter(routes)]\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/base-alerts/base-alerts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseAlertsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/base-button/base-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/base-inputs/base-checkbox/base-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/base-inputs/base-dropdown/base-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/base-inputs/base-dropdown/base-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownValueOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/base-inputs/base-input/base-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}